# Default values for sre-cw-host.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#Specifies the namespace to deploy the application
#namespace: sre-cw-host

adminClusterRole:
  # Specifies whether the global admin cluster role should be created
  create: true
  name: admin-role

efsStorageClass:
  # Specifies whether the global efs storage class should be created
  create: true
  name: efs-sc
  provisioner: efs.csi.aws.com

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "cw-admin"

replicaCount: 1

image:
  repository: 426292817097.dkr.ecr.us-west-2.amazonaws.com/sre-cityworks
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"
containerPort: 6001
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: sre-host.cityworks.cloud
      paths:
        - path: /
          pathType: Prefix
          service:
            port: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

#We are defining all the values required to create the persistent volume and persistent volume claims
storageClassName: efs-sc
accessModes:
  - ReadWriteMany
storage: 5Gi
persistentVolumeReclaimPolicy: Retain
csiDriver: efs.csi.aws.com

persistentVolumes:
  - name: sre-host-efs-pv
    volumeHandle: fs-084c97e213284610e
  - name: sre-host-tenants-efs-pv-1
    volumeHandle: fs-0d94780b70ba66dbb

persistentVolumeClaims:
  - name: host-efs-claim
    volumeName: sre-host-efs-pv
  - name: host-tenants-efs-claim-1
    volumeName: sre-host-tenants-efs-pv-1


# We are defining the storage class for the tenant dynamic provisioning
storageClass:
  create: true
  name: sre-tenant-unique-efs-dynamic-sc-1
  provisioner: efs.csi.aws.com
  parameters:
        provisioningMode: efs-ap
        fileSystemId: fs-0d94780b70ba66dbb
        directoryPerms: "775"
        uid: "0"
        gid: "0"
        basePath: /
        subPathPattern: /${.PVC.name}
        ensureUniqueDirectory: "false"